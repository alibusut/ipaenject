name: 🚀 Build Modified iOS App

on:
  workflow_dispatch:
    inputs:
      ipa_url:
        description: '📱 رابط ملف IPA الأصلي (يجب أن يكون مفكك التشفير)'
        required: true
        type: string
      
      app_type:
        description: '📋 نوع التطبيق'
        required: true
        default: 'youtube'
        type: choice
        options:
          - youtube
          - instagram  
          - tiktok
          - whatsapp
          - telegram
          - spotify
          - snapchat
          - discord
          - custom
      
      selected_tweaks:
        description: '🧩 التعديلات المطلوبة (مفصولة بفواصل)'
        required: false
        default: 'all'
        type: string
      
      bundle_id:
        description: '🆔 Bundle ID الجديد (اختياري)'
        required: false
        default: ''
        type: string
      
      display_name:
        description: '📝 اسم التطبيق المعروض (اختياري)'
        required: false
        default: ''
        type: string
      
      app_version:
        description: '🔢 إصدار التطبيق (اختياري)'
        required: false
        default: '1.0.0'
        type: string

jobs:
  build:
    name: 🔨 Build Modified App
    runs-on: macos-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🛠️ Setup Build Environment
        run: |
          echo "🚀 Setting up build environment..."
          
          # Install required tools
          brew install --quiet ldid
          brew install --quiet ios-deploy
          
          # Install Azule (iOS app patcher)
          echo "📦 Installing Azule..."
          curl -sSL https://raw.githubusercontent.com/Al4ise/Azule/main/azule.sh | bash
          
          # Setup workspace
          mkdir -p build
          mkdir -p output
          
          echo "✅ Build environment ready!"
      
      - name: 📱 Download Original IPA
        run: |
          echo "⬇️ Downloading original IPA..."
          
          IPA_URL="${{ github.event.inputs.ipa_url }}"
          echo "📍 URL: $IPA_URL"
          
          # Download IPA file
          curl -L -o build/original.ipa "$IPA_URL"
          
          # Verify download
          if [ ! -f build/original.ipa ]; then
            echo "❌ Failed to download IPA file"
            exit 1
          fi
          
          # Check file size (should be > 10MB for most apps)
          FILE_SIZE=$(stat -f%z build/original.ipa)
          if [ $FILE_SIZE -lt 10485760 ]; then
            echo "⚠️ Warning: IPA file seems too small ($FILE_SIZE bytes)"
          fi
          
          echo "✅ IPA downloaded successfully ($(($FILE_SIZE/1024/1024))MB)"
      
      - name: 🧩 Prepare Tweaks
        run: |
          echo "🔍 Preparing tweaks for ${{ github.event.inputs.app_type }}..."
          
          APP_TYPE="${{ github.event.inputs.app_type }}"
          SELECTED_TWEAKS="${{ github.event.inputs.selected_tweaks }}"
          
          # Create tweaks directory for this build
          mkdir -p build/tweaks
          
          # Function to copy tweaks
          copy_tweaks() {
            local category=$1
            local app=$2
            
            if [ -d "tweaks/$category/$app" ]; then
              echo "📂 Copying tweaks from tweaks/$category/$app/"
              cp tweaks/$category/$app/*.dylib build/tweaks/ 2>/dev/null || true
              cp tweaks/$category/$app/*.deb build/tweaks/ 2>/dev/null || true
            fi
          }
          
          # Copy universal tweaks (always included)
          echo "🌐 Adding universal tweaks..."
          copy_tweaks "universal" "adblock"
          copy_tweaks "universal" "jailbreak-detection"
          copy_tweaks "universal" "flex-patches"
          
          # Copy app-specific tweaks
          case $APP_TYPE in
            youtube)
              echo "📺 Adding YouTube tweaks..."
              copy_tweaks "media" "youtube"
              ;;
            instagram)
              echo "📸 Adding Instagram tweaks..."
              copy_tweaks "social" "instagram"
              ;;
            tiktok)
              echo "🎵 Adding TikTok tweaks..."
              copy_tweaks "media" "tiktok"
              ;;
            whatsapp)
              echo "💬 Adding WhatsApp tweaks..."
              copy_tweaks "social" "whatsapp"
              ;;
            telegram)
              echo "✈️ Adding Telegram tweaks..."
              copy_tweaks "social" "telegram"
              ;;
            spotify)
              echo "🎶 Adding Spotify tweaks..."
              copy_tweaks "media" "spotify"
              ;;
            snapchat)
              echo "👻 Adding Snapchat tweaks..."
              copy_tweaks "social" "snapchat"
              ;;
            discord)
              echo "🎮 Adding Discord tweaks..."
              copy_tweaks "social" "discord"
              ;;
            custom)
              echo "🔧 Custom app - adding universal tweaks only"
              ;;
          esac
          
          # Handle custom tweak selection
          if [ "$SELECTED_TWEAKS" != "all" ] && [ -n "$SELECTED_TWEAKS" ]; then
            echo "🎯 Processing custom tweak selection..."
            # Remove all tweaks and add only selected ones
            rm -f build/tweaks/*
            
            IFS=',' read -ra TWEAKS <<< "$SELECTED_TWEAKS"
            for tweak in "${TWEAKS[@]}"; do
              tweak=$(echo "$tweak" | xargs) # trim whitespace
              echo "  ➕ Adding: $tweak"
              
              # Find and copy the specified tweak
              find tweaks/ -name "$tweak*.dylib" -exec cp {} build/tweaks/ \;
              find tweaks/ -name "$tweak*.deb" -exec cp {} build/tweaks/ \;
            done
          fi
          
          # List prepared tweaks
          echo "📋 Tweaks prepared for injection:"
          ls -la build/tweaks/ || echo "  ⚠️ No tweaks found"
          
          # Count tweaks
          TWEAK_COUNT=$(ls build/tweaks/*.{dylib,deb} 2>/dev/null | wc -l)
          echo "🔢 Total tweaks: $TWEAK_COUNT"
      
      - name: 🔧 Apply Patches
        run: |
          echo "🔨 Applying patches to the app..."
          
          cd build/
          
          # Check if we have any tweaks to inject
          if [ ! "$(ls -A tweaks/)" ]; then
            echo "⚠️ No tweaks to inject, creating app without modifications..."
            cp original.ipa ../output/modified.ipa
            exit 0
          fi
          
          # Use Azule to inject tweaks
          echo "💉 Injecting tweaks using Azule..."
          
          # Prepare Azule command
          AZULE_CMD="azule -i original.ipa -o modified.ipa -n '${{ github.event.inputs.display_name || 'Modified App' }}'"
          
          # Add bundle ID if specified
          if [ -n "${{ github.event.inputs.bundle_id }}" ]; then
            AZULE_CMD="$AZULE_CMD -b '${{ github.event.inputs.bundle_id }}'"
          fi
          
          # Add version if specified
          if [ -n "${{ github.event.inputs.app_version }}" ]; then
            AZULE_CMD="$AZULE_CMD -v '${{ github.event.inputs.app_version }}'"
          fi
          
          # Add all tweaks
          for tweak in tweaks/*.{dylib,deb}; do
            if [ -f "$tweak" ]; then
              AZULE_CMD="$AZULE_CMD -f '$tweak'"
            fi
          done
          
          echo "🏃‍♂️ Running: $AZULE_CMD"
          eval $AZULE_CMD
          
          # Verify output
          if [ -f modified.ipa ]; then
            echo "✅ App patching completed successfully!"
            cp modified.ipa ../output/
          else
            echo "❌ Patching failed!"
            exit 1
          fi
      
      - name: 🔐 Sign Application
        run: |
          echo "🖊️ Signing the modified application..."
          
          cd output/
          
          # Extract app for signing
          unzip -q modified.ipa
          
          # Find the app bundle
          APP_PATH=$(find Payload -name "*.app" | head -n1)
          
          if [ -z "$APP_PATH" ]; then
            echo "❌ Could not find app bundle in IPA"
            exit 1
          fi
          
          echo "📱 App bundle: $APP_PATH"
          
          # Sign with ldid (free signing)
          echo "🔑 Applying free signature..."
          ldid -S "$APP_PATH"
          
          # Re-package IPA
          echo "📦 Re-packaging IPA..."
          zip -r signed.ipa Payload/
          
          # Clean up
          rm -rf Payload/
          rm modified.ipa
          mv signed.ipa modified.ipa
          
          echo "✅ Application signed successfully!"
      
      - name: 📊 Generate Build Info
        run: |
          echo "📋 Generating build information..."
          
          APP_TYPE="${{ github.event.inputs.app_type }}"
          BUILD_DATE=$(date '+%Y-%m-%d %H:%M:%S UTC')
          WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          cat > output/BUILD_INFO.txt << EOF
          🚀 IPAenject - Build Info
          ==========================================
          
          📅 Build Date: $BUILD_DATE
          📱 App Type: $APP_TYPE
          🧩 Selected Tweaks: ${{ github.event.inputs.selected_tweaks }}
          🆔 Bundle ID: ${{ github.event.inputs.bundle_id || 'Default' }}
          📝 Display Name: ${{ github.event.inputs.display_name || 'Default' }}
          🔢 Version: ${{ github.event.inputs.app_version }}
          
          🔗 Workflow URL: $WORKFLOW_URL
          📂 Repository: ${{ github.repository }}
          🏷️ Commit: ${{ github.sha }}
          
          ⚠️ IMPORTANT NOTES:
          • This is for personal use only
          • Make sure you own the original app
          • Install using AltStore, Sideloadly, or similar tools
          
          📱 Installation:
          1. Download the IPA file
          2. Use your preferred sideloading tool
          3. Trust the developer certificate in Settings
          
          🆘 Support: Check repository issues and discussions
          EOF
          
          echo "✅ Build info generated"
      
      - name: 📤 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: modified-ios-app-${{ github.event.inputs.app_type }}-${{ github.run_number }}
          path: |
            output/modified.ipa
            output/BUILD_INFO.txt
          retention-days: 30
      
      - name: 🎉 Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_number }}
          name: "📱 ${{ github.event.inputs.app_type }} Modified App - Build #${{ github.run_number }}"
          body: |
            ## 🚀 Modified iOS App Build
            
            **📱 App Type:** ${{ github.event.inputs.app_type }}  
            **🧩 Tweaks:** ${{ github.event.inputs.selected_tweaks }}  
            **🔢 Version:** ${{ github.event.inputs.app_version }}  
            **📅 Build Date:** $(date '+%Y-%m-%d %H:%M UTC')
            
            ### 📥 Installation Instructions:
            1. Download the `modified.ipa` file below
            2. Use AltStore, Sideloadly, or your preferred sideloading tool
            3. Install the IPA on your iOS device
            4. Trust the developer certificate in Settings > General > VPN & Device Management
            
            ### ⚠️ Important Notes:
            - This build is for **personal use only**
            - Make sure you **own the original app**
            - The signature will expire in 7 days (free account) or 1 year (developer account)
            
            ### 🐛 Issues?
            If you encounter problems, please check our [Issues](https://github.com/${{ github.repository }}/issues) page.
            
            ---
            **Built with ❤️ using IPAenject**
          files: |
            output/modified.ipa
            output/BUILD_INFO.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: ✅ Build Complete
        run: |
          echo "🎉 BUILD COMPLETED SUCCESSFULLY! 🎉"
          echo ""
          echo "📊 Build Summary:"
          echo "  📱 App Type: ${{ github.event.inputs.app_type }}"
          echo "  🧩 Tweaks: ${{ github.event.inputs.selected_tweaks }}"
          echo "  📦 Output: modified.ipa"
          echo "  📅 Date: $(date)"
          echo ""
          echo "🔗 Your modified app is now available in the Releases section!"
          echo "   Go to: https://github.com/${{ github.repository }}/releases"
          echo ""
          echo "📱 Happy sideloading! 🚀"
